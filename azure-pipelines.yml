# Azure DevOps Pipeline for Streamlit CSV Data Manager
trigger:
- main
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  pythonVersion: '3.11'
  appName: 'csv-data-manager'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build and Test'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
    
    - script: |
        python -m pip install --upgrade pip
        pip install -r deployment_requirements.txt
      displayName: 'Install dependencies'
    
    - script: |
        # Run basic validation
        python -c "import streamlit; print('Streamlit import successful')"
        python -c "import pandas; print('Pandas import successful')"
        python -c "import numpy; print('Numpy import successful')"
      displayName: 'Validate dependencies'
    
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(appName).zip'
        replaceExistingArchive: true
      displayName: 'Archive application files'
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'
      displayName: 'Publish artifacts'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy to Azure'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'
            displayName: 'Download artifacts'
          
          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: '$(System.ArtifactsDirectory)/drop/$(appName).zip'
              destinationFolder: '$(System.DefaultWorkingDirectory)'
              cleanDestinationFolder: true
            displayName: 'Extract application files'
          
          - task: AzureWebApp@1
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appType: 'webAppLinux'
              appName: '$(webAppName)'
              package: '$(System.DefaultWorkingDirectory)'
              runtimeStack: 'PYTHON|3.11'
              startUpCommand: 'streamlit run app.py --server.port 8000 --server.address 0.0.0.0'
            displayName: 'Deploy to Azure Web App'